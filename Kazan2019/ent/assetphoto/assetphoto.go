// Code generated by ent, DO NOT EDIT.

package assetphoto

const (
	// Label holds the string label denoting the assetphoto type in the database.
	Label = "asset_photo"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "ID"
	// FieldAssetPhoto holds the string denoting the assetphoto field in the database.
	FieldAssetPhoto = "asset_photo"
	// EdgeAsset holds the string denoting the asset edge name in mutations.
	EdgeAsset = "Asset"
	// Table holds the table name of the assetphoto in the database.
	Table = "asset_photos"
	// AssetTable is the table that holds the Asset relation/edge.
	AssetTable = "asset_photos"
	// AssetInverseTable is the table name for the Asset entity.
	// It exists in this package in order to avoid circular dependency with the "asset" package.
	AssetInverseTable = "assets"
	// AssetColumn is the table column denoting the Asset relation/edge.
	AssetColumn = "asset_asset_photo"
)

// Columns holds all SQL columns for assetphoto fields.
var Columns = []string{
	FieldID,
	FieldAssetPhoto,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "asset_photos"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"asset_asset_photo",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

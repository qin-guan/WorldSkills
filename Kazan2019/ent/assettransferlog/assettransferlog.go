// Code generated by ent, DO NOT EDIT.

package assettransferlog

const (
	// Label holds the string label denoting the assettransferlog type in the database.
	Label = "asset_transfer_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "ID"
	// FieldAssetID holds the string denoting the assetid field in the database.
	FieldAssetID = "asset_id"
	// FieldFromAssetSN holds the string denoting the fromassetsn field in the database.
	FieldFromAssetSN = "from_asset_sn"
	// FieldToAssetSN holds the string denoting the toassetsn field in the database.
	FieldToAssetSN = "to_asset_sn"
	// FieldFromDepartmentLocationID holds the string denoting the fromdepartmentlocationid field in the database.
	FieldFromDepartmentLocationID = "from_department_location_id"
	// FieldToDepartmentLocationID holds the string denoting the todepartmentlocationid field in the database.
	FieldToDepartmentLocationID = "to_department_location_id"
	// FieldTransferDate holds the string denoting the transferdate field in the database.
	FieldTransferDate = "transfer_date"
	// EdgeAsset holds the string denoting the asset edge name in mutations.
	EdgeAsset = "Asset"
	// EdgeFromDepartmentLocation holds the string denoting the fromdepartmentlocation edge name in mutations.
	EdgeFromDepartmentLocation = "FromDepartmentLocation"
	// EdgeToDepartmentLocation holds the string denoting the todepartmentlocation edge name in mutations.
	EdgeToDepartmentLocation = "ToDepartmentLocation"
	// Table holds the table name of the assettransferlog in the database.
	Table = "asset_transfer_logs"
	// AssetTable is the table that holds the Asset relation/edge.
	AssetTable = "asset_transfer_logs"
	// AssetInverseTable is the table name for the Asset entity.
	// It exists in this package in order to avoid circular dependency with the "asset" package.
	AssetInverseTable = "assets"
	// AssetColumn is the table column denoting the Asset relation/edge.
	AssetColumn = "asset_id"
	// FromDepartmentLocationTable is the table that holds the FromDepartmentLocation relation/edge.
	FromDepartmentLocationTable = "asset_transfer_logs"
	// FromDepartmentLocationInverseTable is the table name for the DepartmentLocation entity.
	// It exists in this package in order to avoid circular dependency with the "departmentlocation" package.
	FromDepartmentLocationInverseTable = "department_locations"
	// FromDepartmentLocationColumn is the table column denoting the FromDepartmentLocation relation/edge.
	FromDepartmentLocationColumn = "from_department_location_id"
	// ToDepartmentLocationTable is the table that holds the ToDepartmentLocation relation/edge.
	ToDepartmentLocationTable = "asset_transfer_logs"
	// ToDepartmentLocationInverseTable is the table name for the DepartmentLocation entity.
	// It exists in this package in order to avoid circular dependency with the "departmentlocation" package.
	ToDepartmentLocationInverseTable = "department_locations"
	// ToDepartmentLocationColumn is the table column denoting the ToDepartmentLocation relation/edge.
	ToDepartmentLocationColumn = "to_department_location_id"
)

// Columns holds all SQL columns for assettransferlog fields.
var Columns = []string{
	FieldID,
	FieldAssetID,
	FieldFromAssetSN,
	FieldToAssetSN,
	FieldFromDepartmentLocationID,
	FieldToDepartmentLocationID,
	FieldTransferDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// FromAssetSNValidator is a validator for the "FromAssetSN" field. It is called by the builders before save.
	FromAssetSNValidator func(int) error
	// ToAssetSNValidator is a validator for the "ToAssetSN" field. It is called by the builders before save.
	ToAssetSNValidator func(int) error
)

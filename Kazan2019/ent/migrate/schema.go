// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AssetsColumns holds the columns for the "assets" table.
	AssetsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "asset_sn", Type: field.TypeInt},
		{Name: "asset_name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "warranty_date", Type: field.TypeTime},
		{Name: "asset_group_id", Type: field.TypeInt},
		{Name: "department_location_id", Type: field.TypeInt},
		{Name: "employee_id", Type: field.TypeInt},
	}
	// AssetsTable holds the schema information for the "assets" table.
	AssetsTable = &schema.Table{
		Name:       "assets",
		Columns:    AssetsColumns,
		PrimaryKey: []*schema.Column{AssetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "assets_asset_groups_Asset",
				Columns:    []*schema.Column{AssetsColumns[5]},
				RefColumns: []*schema.Column{AssetGroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assets_department_locations_Asset",
				Columns:    []*schema.Column{AssetsColumns[6]},
				RefColumns: []*schema.Column{DepartmentLocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "assets_employees_Asset",
				Columns:    []*schema.Column{AssetsColumns[7]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AssetGroupsColumns holds the columns for the "asset_groups" table.
	AssetGroupsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// AssetGroupsTable holds the schema information for the "asset_groups" table.
	AssetGroupsTable = &schema.Table{
		Name:       "asset_groups",
		Columns:    AssetGroupsColumns,
		PrimaryKey: []*schema.Column{AssetGroupsColumns[0]},
	}
	// AssetPhotosColumns holds the columns for the "asset_photos" table.
	AssetPhotosColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "asset_photo", Type: field.TypeString},
		{Name: "asset_asset_photo", Type: field.TypeInt},
	}
	// AssetPhotosTable holds the schema information for the "asset_photos" table.
	AssetPhotosTable = &schema.Table{
		Name:       "asset_photos",
		Columns:    AssetPhotosColumns,
		PrimaryKey: []*schema.Column{AssetPhotosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_photos_assets_AssetPhoto",
				Columns:    []*schema.Column{AssetPhotosColumns[2]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AssetTransferLogsColumns holds the columns for the "asset_transfer_logs" table.
	AssetTransferLogsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "from_asset_sn", Type: field.TypeInt},
		{Name: "to_asset_sn", Type: field.TypeInt},
		{Name: "transfer_date", Type: field.TypeTime},
		{Name: "asset_id", Type: field.TypeInt},
		{Name: "from_department_location_id", Type: field.TypeInt},
		{Name: "to_department_location_id", Type: field.TypeInt},
	}
	// AssetTransferLogsTable holds the schema information for the "asset_transfer_logs" table.
	AssetTransferLogsTable = &schema.Table{
		Name:       "asset_transfer_logs",
		Columns:    AssetTransferLogsColumns,
		PrimaryKey: []*schema.Column{AssetTransferLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_transfer_logs_assets_AssetTransferLog",
				Columns:    []*schema.Column{AssetTransferLogsColumns[4]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "asset_transfer_logs_department_locations_FromDepartmentLocation",
				Columns:    []*schema.Column{AssetTransferLogsColumns[5]},
				RefColumns: []*schema.Column{DepartmentLocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "asset_transfer_logs_department_locations_ToDepartmentLocation",
				Columns:    []*schema.Column{AssetTransferLogsColumns[6]},
				RefColumns: []*schema.Column{DepartmentLocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
	}
	// DepartmentLocationsColumns holds the columns for the "department_locations" table.
	DepartmentLocationsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "department_id", Type: field.TypeInt},
		{Name: "location_id", Type: field.TypeInt},
	}
	// DepartmentLocationsTable holds the schema information for the "department_locations" table.
	DepartmentLocationsTable = &schema.Table{
		Name:       "department_locations",
		Columns:    DepartmentLocationsColumns,
		PrimaryKey: []*schema.Column{DepartmentLocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "department_locations_departments_DepartmentLocation",
				Columns:    []*schema.Column{DepartmentLocationsColumns[3]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "department_locations_locations_DepartmentLocation",
				Columns:    []*schema.Column{DepartmentLocationsColumns[4]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:       "employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AssetsTable,
		AssetGroupsTable,
		AssetPhotosTable,
		AssetTransferLogsTable,
		DepartmentsTable,
		DepartmentLocationsTable,
		EmployeesTable,
		LocationsTable,
	}
)

func init() {
	AssetsTable.ForeignKeys[0].RefTable = AssetGroupsTable
	AssetsTable.ForeignKeys[1].RefTable = DepartmentLocationsTable
	AssetsTable.ForeignKeys[2].RefTable = EmployeesTable
	AssetPhotosTable.ForeignKeys[0].RefTable = AssetsTable
	AssetTransferLogsTable.ForeignKeys[0].RefTable = AssetsTable
	AssetTransferLogsTable.ForeignKeys[1].RefTable = DepartmentLocationsTable
	AssetTransferLogsTable.ForeignKeys[2].RefTable = DepartmentLocationsTable
	DepartmentLocationsTable.ForeignKeys[0].RefTable = DepartmentsTable
	DepartmentLocationsTable.ForeignKeys[1].RefTable = LocationsTable
}
